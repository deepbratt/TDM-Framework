{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"F:\\\\develop\\\\TezDealz-MobileApp\\\\Component\\\\customButton.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar CustomButton = function CustomButton(props) {\n  var style = {};\n\n  if (props.type === 'default') {\n    style.backgroundColor = \"white\";\n    style.borderWidth = 0;\n  } else if (props.type === 'link') {\n    style.borderWidth = 0;\n  }\n\n  return React.createElement(TouchableOpacity, _extends({}, props, {\n    style: [styles.buttonStyle, style, props.buttonStyle, props.disabled ? styles.disabled : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), props.leftImg && React.createElement(Image, {\n    fadeDuration: 0,\n    style: {\n      marginHorizontal: 20\n    },\n    source: props.Img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: props.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, props.text));\n};\n\nvar styles = StyleSheet.create({\n  buttonStyle: {},\n  disabled: {\n    opacity: 0.5\n  }\n});\nCustomButton.defaultProps = {\n  type: 'default',\n  disabled: false,\n  leftImg: false\n};\nCustomButton.propTypes = {\n  type: PropTypes.oneOf(['default', 'link']).isRequired,\n  buttonStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  Img: Image.propTypes.source,\n  leftImg: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  text: PropTypes.string.isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["F:/develop/TezDealz-MobileApp/Component/customButton.js"],"names":["PropTypes","React","CustomButton","props","style","type","backgroundColor","borderWidth","styles","buttonStyle","disabled","leftImg","marginHorizontal","Img","textStyle","text","StyleSheet","create","opacity","defaultProps","propTypes","oneOf","isRequired","ViewPropTypes","Text","Image","source","bool","onPress","func","string"],"mappings":";;;;;;;;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAASC,KAAT,EAAgB;AACnC,MAAMC,KAAK,GAAG,EAAd;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AAC5BD,IAAAA,KAAK,CAACE,eAAN,GAAwB,OAAxB;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,CAApB;AACD,GAHD,MAGO,IAAIJ,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AAChCD,IAAAA,KAAK,CAACG,WAAN,GAAoB,CAApB;AACD;;AACD,SACE,oBAAC,gBAAD,eACMJ,KADN;AAEE,IAAA,KAAK,EAAE,CACLK,MAAM,CAACC,WADF,EAELL,KAFK,EAGLD,KAAK,CAACM,WAHD,EAILN,KAAK,CAACO,QAAN,GAAiBF,MAAM,CAACE,QAAxB,GAAmC,EAJ9B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQEP,KAAK,CAACQ,OAAN,IACD,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE;AAACC,MAAAA,gBAAgB,EAAC;AAAlB,KAA/B;AAAsD,IAAA,MAAM,EAAET,KAAK,CAACU,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,KAAK,CAACW,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BX,KAAK,CAACY,IAArC,CAXF,CADF;AAeD,CAvBD;;AAyBA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,WAAW,EAAE,EADkB;AAG/BC,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,OAAO,EAAE;AADD;AAHqB,CAAlB,CAAf;AAQAhB,YAAY,CAACiB,YAAb,GAA4B;AAC1Bd,EAAAA,IAAI,EAAE,SADoB;AAE1BK,EAAAA,QAAQ,EAAE,KAFgB;AAG1BC,EAAAA,OAAO,EAAC;AAHkB,CAA5B;AAMAT,YAAY,CAACkB,SAAb,GAAyB;AACvBf,EAAAA,IAAI,EAAEL,SAAS,CAACqB,KAAV,CAAgB,CAAC,SAAD,EAAY,MAAZ,CAAhB,EAAqCC,UADpB;AAEvBb,EAAAA,WAAW,EAAEc,aAAa,CAACnB,KAFJ;AAGvBU,EAAAA,SAAS,EAAEU,IAAI,CAACJ,SAAL,CAAehB,KAHH;AAIvBS,EAAAA,GAAG,EAAEY,KAAK,CAACL,SAAN,CAAgBM,MAJE;AAKvBf,EAAAA,OAAO,EAAEX,SAAS,CAAC2B,IALI;AAMvBjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC2B,IANG;AAOvBC,EAAAA,OAAO,EAAE5B,SAAS,CAAC6B,IAPI;AAQvBd,EAAAA,IAAI,EAAEf,SAAS,CAAC8B,MAAV,CAAiBR;AARA,CAAzB;AAYA,eAAepB,YAAf","sourcesContent":["\r\nimport {StyleSheet, TouchableOpacity, Text, ViewPropTypes,Image,View} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n\r\nconst CustomButton = function(props) {\r\n  const style = {};\r\n  if (props.type === 'default') {\r\n    style.backgroundColor = \"white\";\r\n    style.borderWidth = 0;\r\n  } else if (props.type === 'link') {\r\n    style.borderWidth = 0;\r\n  }\r\n  return (\r\n    <TouchableOpacity\r\n      {...props}\r\n      style={[\r\n        styles.buttonStyle,\r\n        style,\r\n        props.buttonStyle,\r\n        props.disabled ? styles.disabled : {},\r\n      ]}>\r\n     {props.leftImg &&\r\n     <Image fadeDuration={0} style={{marginHorizontal:20}} source={props.Img}  />\r\n     }\r\n      <Text style={props.textStyle}>{props.text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonStyle: {\r\n  },\r\n  disabled: {\r\n    opacity: 0.5,\r\n  },\r\n});\r\n\r\nCustomButton.defaultProps = {\r\n  type: 'default',\r\n  disabled: false,\r\n  leftImg:false,\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  type: PropTypes.oneOf(['default', 'link']).isRequired,\r\n  buttonStyle: ViewPropTypes.style,\r\n  textStyle: Text.propTypes.style,\r\n  Img: Image.propTypes.source,\r\n  leftImg: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n \r\n};\r\n\r\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}